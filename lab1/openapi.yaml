openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: COA lab1 Вариант 13104 service1
  version: 1.0.11
servers:
  - url: https://localhost:9090/api/v1
tags:
  - name: worker
    description: Worker management(only one worker every time)
  - name: workers
    description: Workers management
paths:
  /company/worker/{id}:
    get:
      tags:
        - worker
      summary: get worker by id
      operationId: getWorkerById
      parameters:
        - name: id
          in: path
          required: true
          description: Coordinate id to find
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      responses:
        '200':
          description: Returns worker by id
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Worker'
        '404':
          description: Worker with this id not found
        '500':
          description: Server not accessied now
    delete:
      tags:
        - worker
      summary: delete worker by id
      operationId: deleteWorkerById
      parameters:
        - name: id
          in: path
          required: true
          description: Coordinate id to find
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      responses:
        '200':
          description: Delete successfully
        '404':
          description: Worker with this id not found
        '500':
          description: Server not accessied now
    put:
      tags:
        - worker
      summary: update worker by id
      operationId: updateWorkerById
      parameters:
        - name: id
          in: path
          required: true
          description: Coordinate id to find
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      responses:
        '200':
          description: Updated successfully
        '404':
          description: Worker with this id not found
        '500':
          description: Server not accessied now                
  /company/worker:
    post:
      tags:
        - worker
      summary: Create a new worker in company
      operationId: createWorker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkerInRequestBody"
      responses:
        '200':
          description: Created successfully
        '400':
          description: Worker input invalid
        '500':
          description: Server not accessied now
  /company/worker/maxSalary:
    get:
      tags:
        - worker
      summary: get worker, whose salary is the highest
      operationId: getWorkerWithHighestSalary
      responses:
        '200':
          description: got worker, whose salary is the highest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
        '404':
          description: Network invalid
        '500':
          description: Server not accessied now
          
  /company/workers:
    get:
      tags: 
        - workers
      summary: Returns all workers in sort
      operationId: getWorkers
      parameters:
        - name: sortElements
          in: query
          required: false
          description: sort should be done by any combination of all fields in object. It means that in request should have an array where we save all fields, by which sorted result.
          explode: true # create individual field in request for every field
          schema:
            type: array
            items:
              type: string
              default: id
              enum:
                - id
                - name
                - creationDate
                - coordinates.x
                - coordinates.y
                - salary
                - creationDate
                - startDate
                - endDate
                - position
                - organization.name
                - organization.annualTurnover
        - name: isUpper
          in: query
          required: false
          description: The order of result.
          schema:
            type: boolean
            default: true
        - name: filter
          in: query
          required: false
          description: Array of fields used for filtering.
          schema:
            type: array
            items:
              type: string
              pattern: '^((id|creationDate|coordinates\.x|coordinates\.y|salary|startDate|endDate|position|view|organization\.annualTurnover)\-(eq|ne|gt|lt|lte|gte)\-.+)|((organization.name|name)\-eq\-.+)$'
        - name: pageSize
          in: query
          required: false
          description: page size
          schema:
            type: integer
            format: int32
            nullable: false
            minimum: 1
            exclusiveMinimum: false
            example: 10
      responses:
        '200':
          description: Returned all workers by requirements
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ArrayWorkers'
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayWorkers'
        '500':
          description: Server not accessied now
        '400':
          description: invalid input fileter, sortElements, pagesize or sort method
  /company/workers/getAmountByEndDate:
    get:
      tags:
        - workers
      summary: Returns numbers of all workers, whose end date equals or later than given(by our choices)
      operationId: getWorkersByEndDate
      parameters:
        - name: 'endDate'
          in: query
          description: end date
          required: true
          schema:
            type: string
            format: date
            example: '2022-12-31'
            nullable: false
        - name: 'condition'
          in: query
          description: greater or equals
          required: true
          schema:
            type: string
            enum:
              - greater
              - equals
            nullable: false
      responses:
        '200':
          description: successfully get the numbers of workers, who satisfies the condition
          content:
            application/text:
              schema:
                type: integer
                format: int32
                example: 100
                nullable: false
        '400':
          description: wrong date format or wrong condition chosen
        '500':
          description: server not available
        
      
# all objects(like java classes)
components:
  schemas:
    # My own
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int32
          nullable: false
          example: 12
        y:
          type: number
          format: double
          minimum: -561
          exclusiveMinimum: true
          nullable: false
          example: -560
    Organization:
      type: object
      properties:
        fullName:
          type: string
          nullable: false
          maxLength: 758
          example: 'Google'
        annualTurnover:
          type: integer
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 654000000
    Worker:
      xml:
        name: 'woker'
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          exclusiveMinimum: false
          description: Unique identifier of worker. be generated automatically
          example: 1
        name:
          type: string
          nullable: false
          minLength: 1
          example: 'liao'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time 
          nullable: false
          description: Be generated automatically
          example: '2023-09-07T00:00:10Z'
        salary:
          type: number
          format: float
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 23333
        startDate:
          type: string
          format: date
          nullable: false
          example: '2022-09-19'
        endDate:
          type: string
          format: date
          nullable: false
          example: '2022-12-31'
        position:
          type: string
          enum:
            - MANAGER
            - HUMAN_RESOURCES
            - HEAD_OF_DEPARTMENT
            - DEVELOPER
            - COOK
          nullable: false
          example: 'MANAGER'
        organization:
          $ref: '#/components/schemas/Organization'
    WorkerInRequestBody:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: 'liao'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        salary:
          type: number
          format: float
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 23333
        startDate:
          type: string
          format: date
          nullable: false
          example: '2022-09-19'
        endDate:
          type: string
          format: date
          nullable: false
          example: '2022-12-31'
        position:
          type: string
          enum:
            - MANAGER
            - HUMAN_RESOURCES
            - HEAD_OF_DEPARTMENT
            - DEVELOPER
            - COOK
          nullable: false
          example: 'MANAGER'
        organization:
          $ref: '#/components/schemas/Organization'
    ArrayWorkers:
      xml:
        name: 'workers'
        wrapped : true
      type: array
      items:
        $ref: '#/components/schemas/Worker'
        